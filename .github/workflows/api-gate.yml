name: API Gateway CI/CD Pipeline

on:
  push:
    paths:
      - 'api-gateway/**'
  pull_request:
    paths:
      - 'api-gateway/**'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.9.0'

    - name: Install dependencies
      run: |
        cd api-gateway
        yarn install --frozen-lockfile

    - name: Build TypeScript
      run: |
        cd api-gateway
        yarn build

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: ./api-gateway
        push: true
        tags: your-dockerhub-username/api-gateway:latest

    - name: Deploy to production
      run: |
        # Add your deployment steps here
        # For example, you might use SSH to connect to your server and pull the new Docker image
        # ssh user@your-server "docker pull your-dockerhub-username/api-gateway:latest && docker-compose up -d"